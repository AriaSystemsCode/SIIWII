import { AfterViewInit, Component, OnInit, EventEmitter, Input, Injector, Output, ViewChild } from '@angular/core';
import { AppComponentBase } from '@shared/common/app-component-base';
import {
  SycIdentifierDefinitionDto,
  GetSycIdentifierDefinitionForViewDto,
  SycSegmentIdentifierDefinitionDto,
  SycIdentifierDefinitionsServiceProxy,

} from '@shared/service-proxies/service-proxies';

@Component({
  selector: 'app-codes',
  templateUrl: './codes.component.html',
  styleUrls: ['./codes.component.scss']
})
export class CodesComponent extends AppComponentBase implements OnInit {

  sycIdentifierDefinition: SycIdentifierDefinitionDto = new SycIdentifierDefinitionDto();
  getSycIdentifierDefinitionForViewDto: GetSycIdentifierDefinitionForViewDto = new GetSycIdentifierDefinitionForViewDto();
  sycSegmentIdentifierDefinitionDto: SycSegmentIdentifierDefinitionDto = new SycSegmentIdentifierDefinitionDto();
  @Input() placeHolder: string = "";
  code2: string ="";
  @Input() code: string = "";
  @Input() editMode: boolean = false;
  @Input() objectType: string = "";
  @Output() getCodeValue = new EventEmitter<string>();
  @Input() label: string="" ;
  @Input() styles ;
  @Input() readonly: boolean=false ;
  @Input() classes: string="" ;
  @Input() maxlength  =10

  constructor(
    injector: Injector,
    private _sycIdentifierDefinitionsServiceProxy: SycIdentifierDefinitionsServiceProxy,
  ) {
    super(injector)

  }
  OnGetCodeValue(nameInput: any) {
    this.code = nameInput.target.value.toUpperCase();
    this.getCodeValue.emit(this.code);
  }

  ngOnInit(): void {
    if (!this.editMode)
    this.code = ''; 
    
    this._sycIdentifierDefinitionsServiceProxy.getSycIdentifierDefinitionByTypeForView(this.objectType).subscribe
      ((result) => {
        this.sycIdentifierDefinition = result.sycIdentifierDefinition;
        this.getSycIdentifierDefinitionForViewDto = result;

        if (this.getSycIdentifierDefinitionForViewDto != null && this.getSycIdentifierDefinitionForViewDto.sycSegmentIdentifierDefinitions != null
          && this.getSycIdentifierDefinitionForViewDto.sycSegmentIdentifierDefinitions.length > 0) 
          { 
            this.sycSegmentIdentifierDefinitionDto = this.getSycIdentifierDefinitionForViewDto.sycSegmentIdentifierDefinitions[0]; 

            if (!this.editMode && this.sycSegmentIdentifierDefinitionDto.isAutoGenerated) {
              this._sycIdentifierDefinitionsServiceProxy.getNextEntityCode(this.objectType).subscribe
              ((res) => { this.code = res; this.getCodeValue.emit(this.code); });
            }
                      
          }
      });

  }
}
