using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace onetouch.Migrations
{
    /// <inheritdoc />
    public partial class LineSheetReport : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.Sql("  CREATE OR ALTER  VIEW [dbo].[vw_variation_sock]  \r\nAS\r\nSELECT        AppItems.ParentId, a.EntityId, a.EntityCode, a.AttributeCode, a.AttributeValue, b.AttributeValue AS AttributeValue2, ISNULL(AppItems.StockAvailability, 0) AS StockAvailability, a.AttributeId, AppEntityAttachments.AttachmentId, \r\n                         CAST(ISNULL(AppAttachments.TenantId, - 1) AS nvarchar(50)) + '/' + AppAttachments.Attachment AS Attachment,\r\n                             (SELECT       convert(varchar,  cast(c.AttributeValue as date) ,1) as AttributeValue3\r\n                               FROM            AppEntityExtraData AS c\r\n                               WHERE        (appitems.ParentEntityId = EntityId) AND (AttributeId = 660)) AS AttributeValue3\r\n\t\t\t\t\t\t\t   ,AppItemSizeScalesDetails.Id  \r\nFROM            AppEntityExtraData AS a INNER JOIN\r\n                         AppEntityExtraData AS b ON a.EntityId = b.EntityId LEFT OUTER JOIN\r\n                         AppEntityExtraData AS c ON a.EntityId = c.EntityId LEFT OUTER JOIN\r\n                         AppItems ON AppItems.EntityId = a.EntityId LEFT OUTER JOIN\r\n                         AppEntityAttachments ON AppEntityAttachments.EntityId = a.AttributeValueId LEFT OUTER JOIN\r\n                         AppAttachments ON AppAttachments.Id = AppEntityAttachments.AttachmentId\r\n\t\t\t\t\t\t LEFT OUTER JOIN AppItemSizeScalesHeader on AppItemSizeScalesHeader.AppItemId = AppItems.ParentId\r\n\t\t\t\t\t\t LEFT OUTER JOIN AppItemSizeScalesDetails on AppItemSizeScalesDetails.SizeScaleId = AppItemSizeScalesHeader.Id and AppItemSizeScalesDetails.SizeCode = b.AttributeCode\r\nWHERE        (a.EntityObjectTypeId = (Select TOP(1) ID from SycEntityObjectTypes Where Code='COLOR' COLLATE Latin1_General_CS_AS)) AND (b.EntityObjectTypeId = (Select TOP(1) ID from SycEntityObjectTypes Where Code='SIZE' COLLATE Latin1_General_CS_AS)) and (AppItemSizeScalesHeader.ParentId is null)\r\nand AppItems.isdeleted=0 and AppItemSizeScalesHeader.isdeleted=0 and AppItemSizeScalesDetails.isdeleted=0 \r\n  \r\nGO\r\n\r\n\r\n");
            migrationBuilder.Sql(" CREATE OR ALTER                   PROCEDURE [dbo].[Color_Sizes](@ItemId as bigint, @attachmentBaseUrl as nvarchar(250),@showNo as bigint)\r\n\t-- Add the parameters for the stored procedure here\r\n\t\r\nAS\r\nBEGIN\r\n\t-- SET NOCOUNT ON added to prevent extra result sets from\r\n\t-- interfering with SELECT statements.\r\n\tSET NOCOUNT ON;\r\n\r\n      -- Insert statements for procedure here\r\n--declare @showNo bigint = 500\r\ndeclare @foundNo bigint = 0\r\ndeclare @counter bigint = 1\t \r\n\r\n --declare @attachmentBaseUrl nvarchar(200) = 'aa'\r\n    -- Insert statements for procedure here\r\n\t--declare @ItemId bigint\r\n\tif (@ItemId=0 or @ItemId IS NULL)\r\n\tBegin\r\n\tSet @ItemId= 1561486\r\n\tEnd\r\n--set @attachmentBaseUrl = 'http://localhost'\t \r\nDECLARE @colnameListValues varchar(max)\r\nDECLARE @colnameListValues2 varchar(max)\r\nDECLARE @colnameListValues3 varchar(max)\r\nDECLARE @colnameListHeaders varchar(max)\r\nDECLARE @colnameListHeaders2 varchar(max)\r\n\r\nDECLARE @colnameListSum varchar(max)\r\n\r\nSET @colnameListValues = NULL\r\nSET @colnameListValues2 = NULL\r\nSET @colnameListValues3 = ''\r\nSET @colnameListHeaders = NULL\r\nSET @colnameListHeaders2 = NULL\r\nSET @colnameListSum = NULL\r\n\r\nDeclare @T Table (AttributeValue2  nvarchar(250), id int)\r\nInsert @T Exec [dbo].[GetVariations] @ItemId\r\n--Select * from @T \r\n\r\n\r\nSELECT   \r\n@foundNo = @foundNo +1,\r\n@colnameListValues = COALESCE(@colnameListValues + ',','') + QUOTENAME(AttributeValue2, '\"'),\r\n@colnameListHeaders = COALESCE(@colnameListHeaders + ',','') + '['+AttributeValue2+'] as Size'+ltrim(str(@foundNo)),\r\n@colnameListValues2 = COALESCE(@colnameListValues2 + ',','') + QUOTENAME(RIGHT( space(9)+AttributeValue2, 9), '''')+' as Size'+ltrim(str(@foundNo)),\r\n@colnameListHeaders2 = COALESCE(@colnameListHeaders2 + ',','') + 'Size'+ltrim(str(@foundNo))+' as Size'+ltrim(str(@foundNo)),\r\n@colnameListSum = COALESCE(@colnameListSum + '+','') + 'isnull(Size'+ltrim(str(@foundNo))+ ',0) '\r\nFROM @T\r\n\r\n\r\n  if (@colnameListSum is not null) \r\n  begin\r\n    Set @colnameListSum = '('+@colnameListSum + ' + 0) as total'\r\n  End \r\n\r\nDECLARE @SQLQuery NVARCHAR(MAX)\r\nSET @SQLQuery =\r\n'SELECT '+str(@ItemId)+'as ItemId, attachment,AttributeValue ,'+cast( @foundNo as varchar)+' as counter,AttributeValue3 ,'+@colnameListHeaders+'\r\nFROM \r\n( SELECT SM.AttributeValue, '''+\r\n@attachmentBaseUrl+'/attachments/' + '''+sm.attachment as attachment'\r\n+',Sm.AttributeValue2, Sm.AttributeValue3, SM.StockAvailability\r\nFROM vw_variation_sock SM where parentid='+str(@ItemId ) +'\r\n) AS tbl\r\nPIVOT \r\n( Sum(StockAvailability)\r\nFOR \"'+'AttributeValue2'+'\"  IN ('+@colnameListValues+') ) as pvt'\r\n \t\t\t\t\t   \r\n\r\n--SET @SQLQuery ='SELECT top(1) '+str(@ItemId)+' as ItemId, Space(1) as Attachment,Space(1) as AttributeValue, Space(1) as AttributeValue3 ,'+@colnameListValues2+\r\n--',  ''Total'' as Total FROM appItems'\r\n--+' union '+ \r\nset @SQLQuery = ' Select ROW_NUMBER() OVER(ORDER BY AttributeValue) AS num_row, ItemId,Attachment,  AttributeValue,counter, AttributeValue3, '+@colnameListHeaders2+',' + @colnameListSum+ ' from ('\r\n+@SQLQuery + ') as yy '\r\n\r\ndeclare @selectCol nvarchar(max) = ''\r\ndeclare @selectColSum nvarchar(max) = ''\r\ndeclare @counterMid bigint = 0\r\n-- select just showNo \r\n--if((@showNo < @foundNo) and (@showNo > 1))\r\nif((@showNo < @foundNo) )\r\nbegin\r\n    set @selectCol = ''\r\n\tif (@showNo > 1)\r\n\tbegin\r\n\t while @counter < (@showNo -1)\r\n\t begin\r\n\t \tset @selectCol = @selectCol+ 'Size'+cast(@counter as nvarchar(10))+','\r\n\t \tset @colnameListValues3 = @colnameListValues3 +'str(sum( size'+cast(@counter as nvarchar(10))+' )) as size'+cast(@counter as nvarchar(10))+','\r\n\t \tset @counter = @counter +1\r\n\t end \r\n\tend \r\n\t\r\n\tset @counterMid  =@counter + 1\r\n\r\n\tset @colnameListValues3 = @colnameListValues3 +'str(sum(size'+cast(@counter as nvarchar(10))+' )) as size'+cast(@counter as nvarchar(10))+','\r\n\t+'str(sum( size'+cast(@counterMid as nvarchar(10))+' )) as size'+cast(@counterMid as nvarchar(10))+','+'str(sum( total )) as total'\r\n\tset @selectCol = @selectCol+ 'Size'+cast(@counter as nvarchar(10))\r\n\r\n\tset @selectColSum  = ''\r\n\t\r\n\twhile @counter <@foundNo\r\n\tbegin\r\n\t\tset @counter = @counter +1\r\n\t\t--set @selectColSum = @selectColSum + 'cast(Size'+ cast(@counter as nvarchar(10))+' as int) +'\r\n\t\tset @selectColSum = @selectColSum + 'Size'+ cast(@counter as nvarchar(10))+' +'\r\n\tend \r\n\tset @selectColSum = '('+@selectColSum + '0 ) as Size'+ cast(@counterMid as nvarchar(10))\r\n\tSET @SQLQuery ='SELECT num_row, ItemId, Attachment,(case when num_row < 20 then AttributeValue else ''More'' end) as AttributeValue, counter,AttributeValue3, ' + @selectCol  + ', ' + @selectColSum +',total from ( '+\r\n\t\t+@SQLQuery+') as mmm'\r\n    set @colnameListValues2 = SUBSTRING(  @colnameListValues2,0, CHARINDEX('Size'+cast(@showNo-1 as nvarchar(10))+',',@colnameListValues2,3)+5)+',''     More'' as Size'+cast(@showNo as nvarchar(10))\r\n\r\nend\r\n--if((@showNo < @foundNo) and (@showNo=1))\r\n--begin\r\n  --  set @colnameListValues2 = '''More'' as Size'+cast(@showNo as nvarchar(10))\r\n\t\r\n--end\r\n\r\n\r\nif(@showNo >= @foundNo)\r\nbegin\r\n    set @selectCol  = ''\r\n\twhile @counter <= @foundNo \r\n\tbegin\r\n\t\tset @selectCol = @selectCol+ 'Size'+cast(@counter as nvarchar(10))+','\r\n\t\tset @colnameListValues3 = @colnameListValues3 +'str(sum( size'+cast(@counter as nvarchar(10))+' )) as size'+cast(@counter as nvarchar(10))+','\r\n\t\tset @counter = @counter +1\r\n\tend \r\n\t\r\n\t--set @counterMid = @counter + 1\r\n\r\n\tset @colnameListValues3 = @colnameListValues3 +'str(sum( total )) as total'\r\n\t--set @selectCol = @selectCol+ 'Size'+cast(@counter as nvarchar(10))\r\n\r\n\tset @selectColSum  = ''\r\n\t\r\n\t--while @counter <=@foundNo\r\n\t--begin\r\n\t\t--set @counter = @counter +1\r\n\t\t--set @selectColSum = @selectColSum + 'Size'+ cast(@counter as nvarchar(10))+' +'\r\n\t--end \r\n\t--set @selectColSum = '('+@selectColSum + '0 ) as Size'+ cast(@counterMid as nvarchar(10))\r\n\tSET @SQLQuery ='SELECT num_row, ItemId, Attachment,(case when num_row < 20 then AttributeValue else ''More'' end) as AttributeValue, counter,AttributeValue3, ' + @selectCol  +'total from ( '+\r\n\t\t+@SQLQuery+') as mmm'\r\n    --set @colnameListValues2 = SUBSTRING(  @colnameListValues2,0, CHARINDEX('Size'+cast(@showNo-1 as nvarchar(10))+',',@colnameListValues2,3)+5)+',''More'' as Size'+cast(@showNo as nvarchar(10))\r\n\r\nend\r\nset @colnameListValues2 = +','+@colnameListValues2 + ',  ''     Total'' as Total FROM appItems'\r\nif (@showNo=0)\r\nbegin\r\n  set @colnameListValues2 = ',  ''     Total'' as Total FROM appItems'\r\n set @colnameListValues3 = ' str(sum( total )) as total'\t\r\nend\r\n\r\nset @SQLQuery = 'select max(num_row) as num_row, max(itemid) as itemid, max(Attachment)  as Attachment, AttributeValue, max(counter) as counter, max(AttributeValue3) as AttributeValue3, '+\r\n@colnameListValues3\r\n+' from ('+ @SQLQuery + ' ) as xx group by attributevalue order by num_row'\r\n\r\n\r\nSET @SQLQuery ='SELECT top(1) 0 as num_row,'+str(@ItemId)+' as ItemId, Space(1) as Attachment,''Color Name'' as AttributeValue, '+str(@foundNo)+' as counter, ''Start Ship Date'' as AttributeValue3 '\r\n+@colnameListValues2\r\n\r\n+' union '+ @SQLQuery\r\n\r\n--select top(1) @SQLQuery from appitems \r\nEXEC(@SQLQuery)\t\t\r\n \r\n \r\nEND\r\nGO\r\n\r\n\r\n");
            migrationBuilder.Sql(" CREATE OR ALTER       PROCEDURE [dbo].[GetVariations] \r\n\t-- Add the parameters for the stored procedure here\r\n\t @Parentid as int\r\nAS\r\nBEGIN\r\n\t-- SET NOCOUNT ON added to prevent extra result sets from\r\n\t-- interfering with SELECT statements.\r\n\tSET NOCOUNT ON;\r\n\t \r\n    -- Insert statements for procedure here\r\n \r\nSELECT distinct AttributeValue2, Id\r\nfrom (select AttributeValue2, min(Id) as id\r\n        FROM  vw_variation_sock where  parentid = @ParentId group by AttributeValue2) as Y\r\n\t\t\t\t\t\t order by id\r\nEND\r\nGO\r\n\r\n\r\n");
            migrationBuilder.Sql(" CREATE OR ALTER           PROCEDURE [dbo].[ItemsListsReport1](@priceLevel as nvarchar,@OrderBy as bigint,@selectorKey as nvarchar(250),@tenantId as bigint, @userId as bigint, @itemsListId as bigint, @preparedForContactId as bigint, @attachmentBaseUrl as nvarchar(250))\r\n                    as\r\n\r\n\t\t\t\t\t--Param part\r\n\t\t\t\t\t--declare @priceLevel as nvarchar(50)='A'\r\n\t\t\t\t\t--declare @OrderBy as bigint= 1\r\n\t\t\t\t\t--declare @selectorKey as nvarchar(250) = null\r\n\t\t\t\t\t--set @attachmentBaseUrl = 'http://localhost'\r\n\r\n                    declare @attachmentCategoryLogo as bigint = (select top 1 id from sycattachmentcategories where code = 'LOGO')\r\n\r\n\t\t\t\t\tdeclare @currTenantOriginalContactId as bigint = 0\r\n\t\t\t\t\tdeclare @currTenantCurrencyId as bigint = 0\r\n\t\t\t\t\tdeclare @currTenantEmail as nvarchar(500) = ''\r\n\t\t\t\t\tdeclare @currencySymbol as nvarchar(500) = ''\r\n\t\t\t\t\tdeclare @currTenantTel as nvarchar(500) = ''\r\n\t\t\t\t\tdeclare @currTenantAddress as nvarchar(500) = ''\r\n\t\t\t\t\t \r\n                    select top 1 @currTenantOriginalContactId = id,\r\n\t\t\t\t\t@currTenantCurrencyId = CurrencyId,\r\n\t\t\t\t\t@currTenantEmail = EMailAddress,\r\n\t\t\t\t\t@currTenantTel = Phone1Number\r\n\t\t\t\t\tfrom appcontacts where tenantId=@tenantId and IsProfileData=1 and parentid is null\r\n\r\n\t\t\t\t\tSELECT  @currencySymbol = isnull(AttributeValue,'')  FROM   AppEntityExtraData WHERE  (EntityId = @currTenantCurrencyId ) and AttributeId=41\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\tSELECT TOP (1) \r\n\t\t\t\t\t@currTenantAddress = ISNULL(AppAddresses.AddressLine1, '') + ',' +\r\n               ISNULL(AppAddresses.AddressLine2, '') + ',' +\r\n\t\t\t   ISNULL(AppAddresses.city, '') + ',' +\r\n\t\t\t   ISNULL(AppAddresses.State, '') + ',' +\r\n\t\t\t   ISNULL(AppAddresses.PostalCode, '') + ',' +\r\n\t\t\t   ISNULL(B.NAME, '') \r\n\t\t\t\tFROM    AppContactAddresses LEFT OUTER JOIN\r\n\t\t\t\t\t\tAppAddresses ON AppContactAddresses.AddressId = AppAddresses.Id\r\n\t\t\t\t\t\tINNER JOIN\r\n                         AppEntities AS B ON AppAddresses.CountryId = B.Id\r\n\t\t\t\tWHERE        (AppContactAddresses.ContactId = @currTenantOriginalContactId) AND (AppContactAddresses.AddressTypeId = 8)\r\n\r\n\r\n                    declare @currTenantPublishedEntityId as bigint = (select top 1 entityid from appcontacts where TenantId is null and IsProfileData = 0 and PartnerId =@currTenantOriginalContactId)\r\n                    declare @currTenantLogoAttachment as nvarchar(500) = (select top 1 Attachment from appentityattachments ea\r\n\t\t\t\t\t\t\t\t\t\t\t\t                    inner join appattachments a on a.id = ea.attachmentid\r\n\t\t\t\t\t\t\t\t\t\t\t\t                    where entityid=@currTenantPublishedEntityId and AttachmentCategoryId = @attachmentCategoryLogo)\r\n                    declare @currTenantImageUrl as nvarchar(max) = @attachmentBaseUrl+'/attachments/' + cast(@tenantId as nvarchar(50)) + '/'+@currTenantLogoAttachment \r\n\r\n                    declare @preparedForOriginalContactId as bigint = (select top 1 partnerId from appcontacts where id =@preparedForContactId)\r\n                    declare @preparedForTenantId as bigint = (select top 1 entityid from appcontacts where id =@preparedForOriginalContactId)\r\n                    declare @preparedForPublishedEntityId as bigint = (select top 1 entityid from appcontacts where id =@preparedForContactId)\r\n                    declare @preparedForLogoAttachment as nvarchar(500) = (select top 1 Attachment from appentityattachments ea\r\n\t\t\t\t\t\t\t\t\t\t\t\t                    inner join appattachments a on a.id = ea.attachmentid\r\n\t\t\t\t\t\t\t\t\t\t\t\t                    where entityid = @preparedForPublishedEntityId and AttachmentCategoryId = @attachmentCategoryLogo\r\n\t\t\t\t\t\t\t\t\t\t\t\t                    )\r\n                    declare @preparedForImageUrl as nvarchar(max) = @attachmentBaseUrl+'/attachments/' + cast(@preparedForTenantId as nvarchar(50)) + '/'+@preparedForLogoAttachment \r\n\r\n                    declare @preparedForTenantName as nvarchar(250) = (select top 1 name from appcontacts where id =@preparedForContactId)\r\n                    declare @TenantName as nvarchar(250) = (select top 1 name from abptenants where id =@tenantId)\r\n                    declare @userName as nvarchar(250) = (select top 1 Name from abpusers where id =@userId)\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\t\tdeclare @vistied bigint=0; \r\n\r\n\r\n\t\t\t\t\t\t\r\n\r\n\t\tif(@selectorKey is not null and @selectorKey !='' and  @vistied = 0)\r\n\tbegin\r\n\tset @vistied =1\r\n\r\n\t\t\t\t\tSelect * from(\r\n                    select \r\n\t\t\t\t\t i.name as ItemName\r\n\t\t\t\t\t ,Isnull((SELECT        TOP (1) SycEntityObjectCategories.Name FROM    AppEntityCategories INNER JOIN SycEntityObjectCategories ON SycEntityObjectCategories.Id = AppEntityCategories.EntityObjectCategoryId WHERE        (AppEntityCategories.EntityId = i.EntityId)),'')  as CategoryName\r\n                    , il.Id ItemsListId\r\n                    , '' ItemsListCode\r\n                    , '' ItemsListName\r\n                    , '' ItemsListDescription\r\n                    , i.Id as ItemId\r\n                    , i.code as ItemCode\r\n                    , e.Notes as ItemDesc\r\n\t\t\t\t\t,@currTenantEmail as TenantEmail\r\n\t\t\t\t\t,@currTenantTel as TenantTel\r\n\t\t\t\t\t,@currTenantAddress as TenantAddress\r\n\t\t\t\t\t\r\n\t\t\t\t\t,isnull((SELECT top(1) Price FROM AppItemPrices WHERE (AppItemPrices.CurrencyId = @currTenantCurrencyId) and (AppItemPrices.AppItemId =i.Id) AND (Code = 'MSRP')),i.price) as MajorMSRP\r\n\t\t\t\t\t, isnull((select min(AppItemPrices.Price) from AppItemPrices where  (AppItemPrices.CurrencyId = @currTenantCurrencyId) and AppItemPrices.Code='MSRP' and AppItemPrices.AppItemId in (Select id from appitems x where x.parentid = i.id) ),i.price) as ItemMSRPPriceFrom\r\n                    , isnull((select max(AppItemPrices.Price) from AppItemPrices where  (AppItemPrices.CurrencyId = @currTenantCurrencyId) and AppItemPrices.Code='MSRP' and AppItemPrices.AppItemId in (Select id from appitems x where x.parentid = i.id) ),i.price) as ItemMSRPPriceTo\r\n\t\t\t\t\t--,0 as ItemMSRPPriceFrom\r\n\t\t\t\t\t--,0 as ItemMSRPPriceTo\r\n\t\t\t\t\t,isnull((SELECT top(1) Price FROM AppItemPrices WHERE  (AppItemPrices.CurrencyId = @currTenantCurrencyId) and (AppItemPrices.AppItemId =i.Id) AND (Code = @priceLevel)),i.price) as MajorPricePerLevel\r\n                    , isnull((select min(AppItemPrices.Price) from AppItemPrices where  (AppItemPrices.CurrencyId = @currTenantCurrencyId) and AppItemPrices.Code=@priceLevel and AppItemPrices.AppItemId in (Select id from appitems x where x.parentid = i.id) ),i.price) as ItemPriceFrom\r\n                    , isnull((select max(AppItemPrices.Price) from AppItemPrices where  (AppItemPrices.CurrencyId = @currTenantCurrencyId) and AppItemPrices.Code=@priceLevel and AppItemPrices.AppItemId in (Select id from appitems x where x.parentid = i.id) ),i.price) as ItemPriceTo\r\n\t\t\t\t\t,isnull((select top(1) Name from AppItemSizeScalesHeader where AppItemSizeScalesHeader.AppitemId = i.Id and AppItemSizeScalesHeader.Parentid is null),'') as SizeScaleName\r\n\t\t\t\t\t ,isnull((select top(1) Name from AppItemSizeScalesHeader where AppItemSizeScalesHeader.AppitemId = i.Id and AppItemSizeScalesHeader.Parentid is not null),'') as Ratio\r\n\t\t\t\t\t-- ,'Ration 1-2-3=6' as Ratio\r\n\t\t\t\t\t --,' 10-20'as SizeScaleName\r\n                    ,(select top 1 @attachmentBaseUrl+'/attachments/' + cast(a.tenantid as nvarchar(50)) + '/'+Attachment from appentities e inner join appentityattachments ea on e.id = ea.EntityId\r\n\t                    inner join AppAttachments a on a.Id = ea.AttachmentId\r\n\t                    where e.id = i.EntityId order by ea.IsDefault desc\r\n                     ) as imageURL\r\n                     , @currTenantImageUrl as TenantLogo\r\n                     , @preparedForImageUrl as PreparedForLogo\r\n                     , @TenantName TenantName\r\n                     , @preparedForTenantName PreparedForTenantName\r\n                     , @userName PreparedByUserName\r\n\t\t\t\t\t , @currencySymbol as currencySymbol\r\n\t\t\t\t\t ,@currTenantCurrencyId as currTenantCurrencyId\r\n\t\t\t\t\t ,(select count(*) from AppItems where parentid = i.id) as VariationsCount\r\n\t\t\t\t\t ,i.StockAvailability\r\n                     from AppItemSelectors il \r\n                     inner join appitems i on i.Id = il.SelectedId\r\n                     inner join appentities e on e.Id = i.entityid\r\n\r\n                     where cast(il.[Key] as nvarchar(100))=@selectorKey and  i.parentid is null ) as yyy\r\n\t\t\t\t\t ORDER by CASE WHEN @OrderBy=1 THEN ItemName END,\r\n                              CASE WHEN @OrderBy=2 THEN CategoryName END \r\n\t\t\t\t\t \r\n\t\t\t\t\t end \r\n\r\n \r\n\tif(@itemsListId is not null and @itemsListId > 0 and @vistied =0)\r\n\tbegin\r\n\tset @vistied =1\r\n\r\n\t\t\t\t\tSelect * from(\r\n                    select \r\n\t\t\t\t\t i.name as ItemName\r\n\t\t\t\t\t ,Isnull((SELECT        TOP (1) SycEntityObjectCategories.Name FROM    AppEntityCategories INNER JOIN SycEntityObjectCategories ON SycEntityObjectCategories.Id = AppEntityCategories.EntityObjectCategoryId WHERE        (AppEntityCategories.EntityId = i.EntityId)),'')  as CategoryName\r\n                    , il.Id ItemsListId\r\n                    , il.Code ItemsListCode\r\n                    , il.Name ItemsListName\r\n                    , il.Description ItemsListDescription\r\n                    , i.Id as ItemId\r\n                    , i.code as ItemCode\r\n                    , e.Notes as ItemDesc\r\n\t\t\t\t\t,@currTenantEmail as TenantEmail\r\n\t\t\t\t\t,@currTenantTel as TenantTel\r\n\t\t\t\t\t,@currTenantAddress as TenantAddress\r\n\t\t\t\t\t\r\n\t\t\t\t\t,isnull((SELECT top(1) Price FROM AppItemPrices WHERE (AppItemPrices.CurrencyId = @currTenantCurrencyId) and (AppItemPrices.AppItemId =i.Id) AND (Code = 'MSRP')),i.price) as MajorMSRP\r\n\t\t\t\t\t, isnull((select min(AppItemPrices.Price) from AppItemPrices where  (AppItemPrices.CurrencyId = @currTenantCurrencyId) and AppItemPrices.Code='MSRP' and AppItemPrices.AppItemId in (Select id from appitems x where x.parentid = i.id) ),i.price) as ItemMSRPPriceFrom\r\n                    , isnull((select max(AppItemPrices.Price) from AppItemPrices where  (AppItemPrices.CurrencyId = @currTenantCurrencyId) and AppItemPrices.Code='MSRP' and AppItemPrices.AppItemId in (Select id from appitems x where x.parentid = i.id) ),i.price) as ItemMSRPPriceTo\r\n\t\t\t\t\t,isnull((SELECT top(1) Price FROM AppItemPrices WHERE  (AppItemPrices.CurrencyId = @currTenantCurrencyId) and (AppItemPrices.AppItemId =i.Id) AND (Code = @priceLevel)),i.price) as MajorPricePerLevel\r\n                    , isnull((select min(AppItemPrices.Price) from AppItemPrices where  (AppItemPrices.CurrencyId = @currTenantCurrencyId) and AppItemPrices.Code=@priceLevel and AppItemPrices.AppItemId in (Select id from appitems x where x.parentid = i.id) ),i.price) as ItemPriceFrom\r\n                    , isnull((select max(AppItemPrices.Price) from AppItemPrices where  (AppItemPrices.CurrencyId = @currTenantCurrencyId) and AppItemPrices.Code=@priceLevel and AppItemPrices.AppItemId in (Select id from appitems x where x.parentid = i.id) ),i.price) as ItemPriceTo\r\n\t\t\t\t\t,isnull((select top(1) Name from AppItemSizeScalesHeader where AppItemSizeScalesHeader.AppitemId = i.Id and AppItemSizeScalesHeader.Parentid is null),'') as SizeScaleName\r\n\t\t\t\t\t ,isnull((select top(1) Name from AppItemSizeScalesHeader where AppItemSizeScalesHeader.AppitemId = i.Id and AppItemSizeScalesHeader.Parentid is not null),'') as Ratio\r\n                    ,(select top 1 @attachmentBaseUrl+'/attachments/' + cast(a.tenantid as nvarchar(50)) + '/'+Attachment from appentities e inner join appentityattachments ea on e.id = ea.EntityId\r\n\t                    inner join AppAttachments a on a.Id = ea.AttachmentId\r\n\t                    where e.id = i.EntityId order by ea.IsDefault desc\r\n                     ) as imageURL\r\n                     , @currTenantImageUrl as TenantLogo\r\n                     , @preparedForImageUrl as PreparedForLogo\r\n                     , @TenantName TenantName\r\n                     , @preparedForTenantName PreparedForTenantName\r\n                     , @userName PreparedByUserName\r\n\t\t\t\t\t , @currencySymbol as currencySymbol\r\n\t\t\t\t\t ,@currTenantCurrencyId as currTenantCurrencyId\r\n\t\t\t\t\t ,(select count(*) from AppItems where parentid = i.id) as VariationsCount\r\n\t\t\t\t\t ,i.StockAvailability\r\n                     from appitemsLists il inner join  appitemsListDetails ild on il.Id= ild.ItemsListId\r\n                     inner join appitems i on i.Id = ild.ItemId\r\n                     inner join appentities e on e.Id = i.entityid\r\n\r\n                     where il.sharinglevel=0 and  i.parentid is null and il.id = @itemslistid) as yyy\r\n\t\t\t\t\t ORDER by CASE WHEN @OrderBy=1 THEN ItemName END,\r\n                              CASE WHEN @OrderBy=2 THEN CategoryName END \r\n\t\t\t\t\t \r\n\t\t\t\t\t end \r\nGO\r\n\r\n\r\n ");
            migrationBuilder.Sql("  CREATE OR ALTER     PROCEDURE [dbo].[LineSheet_ColorsData]\r\n\t\r\n\t(@SelectedKey as nvarchar(250), @AttributeTypeId as bigint, @ProductListId as bigint, @attachmentBaseUrl as nvarchar(250),@tenantId as bigint)\r\nAS\r\nBEGIN\r\n\t-- SET NOCOUNT ON added to prevent extra result sets from\r\n\t-- interfering with SELECT statements.\r\n\tSET NOCOUNT ON;\r\n \r\n\tset @AttributeTypeId = (Select TOP(1) ID from SycEntityObjectTypes Where Code='COLOR')\r\n\t  \r\n\tdeclare @vistied bigint=0;\r\n\r\n\tif(@ProductListId is not null and @ProductListId > 0)\r\n\tbegin\r\n\tset @vistied =1\r\n    -- Insert statements for procedure here\r\nSELECT DISTINCT TOP (200) AppEntityExtraData.AttributeId, AppEntityExtraData.AttributeValueId, AppEntities.Name, AppEntities.Code, (@attachmentBaseUrl+'/attachments/'+cast (isnull(AppAttachments.TenantId, -1) as nvarchar)+'/'+AppAttachments.Attachment) as Attachment\r\nFROM            AppItemsListDetails as pc LEFT OUTER JOIN\r\n                         AppItems ON pc.ItemId= AppItems.ParentId \r\n\t\t\t\t\t\t LEFT OUTER JOIN AppEntityExtraData ON AppItems.EntityId = AppEntityExtraData.EntityId \r\n\t\t\t\t\t\t LEFT OUTER JOIN AppEntities ON AppEntityExtraData.AttributeValueId = AppEntities.Id\r\n\t\t\t\t\t\t LEFT OUTER JOIN AppEntityAttachments ON AppEntityExtraData.AttributeValueId = AppEntityAttachments.EntityId \r\n\t\t\t\t\t\t LEFT OUTER JOIN AppAttachments on AppEntityAttachments.AttachmentId = AppAttachments.Id\r\nWHERE         (AppEntityExtraData.EntityObjectTypeId = @AttributeTypeId ) and (AppEntityExtraData.AttributeValueId is not null) \r\nand pc.ItemsListId = @ProductListId\r\nend \r\n\r\nif(@vistied =0 and @SelectedKey is not null and @SelectedKey !='' )\r\nbegin\r\nSELECT DISTINCT TOP (200) AppEntityExtraData.AttributeId, AppEntityExtraData.AttributeValueId, AppEntities.Name, AppEntities.Code, (@attachmentBaseUrl+'/attachments/'+cast (isnull(AppAttachments.TenantId,-1) as nvarchar)+'/'+AppAttachments.Attachment) as Attachment\r\nFROM            AppItemSelectors as pc LEFT OUTER JOIN\r\n                         AppItems ON pc.SelectedId= AppItems.ParentId \r\n\t\t\t\t\t\t LEFT OUTER JOIN AppEntityExtraData ON AppItems.EntityId = AppEntityExtraData.EntityId \r\n\t\t\t\t\t\t LEFT OUTER JOIN AppEntities ON AppEntityExtraData.AttributeValueId = AppEntities.Id\r\n\t\t\t\t\t\t LEFT OUTER JOIN AppEntityAttachments ON AppEntityExtraData.AttributeValueId = AppEntityAttachments.EntityId \r\n\t\t\t\t\t\t LEFT OUTER JOIN AppAttachments on AppEntityAttachments.AttachmentId = AppAttachments.Id\r\nWHERE         (AppEntityExtraData.EntityObjectTypeId = @AttributeTypeId ) and (AppEntityExtraData.AttributeValueId is not null) \r\nand pc.[key] = @SelectedKey\r\nend \r\n\r\nEND\r\nGO\r\n\r\n\r\n");
            
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.Sql("DROP VIEW [dbo].[vw_variation_sock]\r\nGO\r\n");
            migrationBuilder.Sql("DROP PROCEDURE [dbo].[Color_Sizes]\r\nGO\r\n");
            migrationBuilder.Sql("DROP PROCEDURE [dbo].[GetVariations]\r\nGO\r\n");
            migrationBuilder.Sql("DROP PROCEDURE [dbo].[ItemsListsReport1]\r\nGO\r\n");
            migrationBuilder.Sql("DROP PROCEDURE [dbo].[LineSheet_ColorsData]\r\nGO\r\n");
        }
    }
}
