using System;
using Microsoft.EntityFrameworkCore.Migrations;

namespace onetouch.Migrations
{
    public partial class Added_SycSegmentIdentifierDefinition : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.AddColumn<long>(
                name: "SycSegmentIdentifierDefinitionId",
                table: "SycCounters",
                nullable: true);

            migrationBuilder.CreateTable(
                name: "SycSegmentIdentifierDefinitions",
                columns: table => new
                {
                    Id = table.Column<long>(nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    CreationTime = table.Column<DateTime>(nullable: false),
                    CreatorUserId = table.Column<long>(nullable: true),
                    LastModificationTime = table.Column<DateTime>(nullable: true),
                    LastModifierUserId = table.Column<long>(nullable: true),
                    IsDeleted = table.Column<bool>(nullable: false),
                    DeleterUserId = table.Column<long>(nullable: true),
                    DeletionTime = table.Column<DateTime>(nullable: true),
                    TenantId = table.Column<int>(nullable: true),
                    Code = table.Column<string>(maxLength: 50, nullable: true),
                    Name = table.Column<string>(maxLength: 100, nullable: true),
                    SegmentNumber = table.Column<int>(nullable: false),
                    SegmentHeader = table.Column<string>(maxLength: 10, nullable: true),
                    SegmentMask = table.Column<string>(maxLength: 50, nullable: true),
                    SegmentLength = table.Column<int>(nullable: false),
                    SegmentType = table.Column<string>(nullable: true),
                    IsAutoGenerated = table.Column<bool>(nullable: false),
                    IsEditable = table.Column<bool>(nullable: false),
                    IsVisible = table.Column<bool>(nullable: false),
                    CodeStartingValue = table.Column<int>(nullable: false),
                    LookOrFieldName = table.Column<string>(maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SycSegmentIdentifierDefinitions", x => x.Id);
                });

            migrationBuilder.CreateIndex(
                name: "IX_SycCounters_SycSegmentIdentifierDefinitionId",
                table: "SycCounters",
                column: "SycSegmentIdentifierDefinitionId");

            migrationBuilder.CreateIndex(
                name: "IX_SycSegmentIdentifierDefinitions_TenantId",
                table: "SycSegmentIdentifierDefinitions",
                column: "TenantId");

            migrationBuilder.AddForeignKey(
                name: "FK_SycCounters_SycSegmentIdentifierDefinitions_SycSegmentIdentifierDefinitionId",
                table: "SycCounters",
                column: "SycSegmentIdentifierDefinitionId",
                principalTable: "SycSegmentIdentifierDefinitions",
                principalColumn: "Id",
                onDelete: ReferentialAction.Restrict);
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_SycCounters_SycSegmentIdentifierDefinitions_SycSegmentIdentifierDefinitionId",
                table: "SycCounters");

            migrationBuilder.DropTable(
                name: "SycSegmentIdentifierDefinitions");

            migrationBuilder.DropIndex(
                name: "IX_SycCounters_SycSegmentIdentifierDefinitionId",
                table: "SycCounters");

            migrationBuilder.DropColumn(
                name: "SycSegmentIdentifierDefinitionId",
                table: "SycCounters");
        }
    }
}
